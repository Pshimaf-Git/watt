// imports
import 'std.errors'

// System summary type
type SystemSummary {
    fn memory_total() {
        return system.__internal_memory_total()
    }
    fn memory_used() {
        return system.__internal_memory_used()
    }
    fn cpu_count() {
        return system.__internal_cpu_count()
    }
}

// This process type
type ThisProcess {
    fn id() {
        return system.__internal_this_process_id()
    }
    fn terminate(code) {
        system.__internal_this_process_terminate(code)
    }
}

// Process type
type Process(raw_handle) {
    fn terminate {
        process.__internal_process_terminate(self.raw_handle)
    }
    fn wait {
        return process.__internal_process_wait(self.raw_handle)
    }
    fn id {
        return process.__internal_process_id(self.raw_handle)
    }
}

// Process builder type
type ProcessBuilder {
    fn spawn_with_shell(command) {
        internal := process.__internal_process_spawn_shell(command)

        return new Process(internal)
    }
}

/*
 Library: system. Unit process.
 | implementation of natives can be found in:
 | > crate::vm::natives::libs::natives_system
 */
unit process {
    // Native process functions
    native __internal_process_spawn_shell -> 'system@process_spawn_shell'
    native __internal_process_id -> 'system@process_id'
    native __internal_process_wait -> 'system@process_wait'
    native __internal_process_terminate -> 'system@process_terminate'

    // Spawns new process with shell
    fn spawn_with_shell(command) {
        proc := new ProcessBuilder()

        return proc.spawn_with_shell(command)
    }
}

/*
 Library: system. Unit system.
 | implementation of natives can be found in:
 | > crate::vm::natives::libs::natives_system
 */
unit system {
    // Natives
    native __internal_getenv -> 'system@getenv'
    native __internal_setenv -> 'system@setenv'
    native __internal_getcwd -> 'system@getcwd'
    native __internal_getargs -> 'system@getargs'
    native __internal_get_osname -> 'system@get_osname'

    native __internal_memory_total -> 'system@memory_total'
    native __internal_memory_used -> 'system@memory_used'
    native __internal_cpu_count -> 'system@cpu_count'

    native __internal_this_process_id -> 'system@this_process_id'
    native __internal_this_process_terminate -> 'system@this_process_terminate'

    // Gets env by name
    fn env(name) {
        internal := __internal_getenv(name)

        if internal == null {
            return result.err(0)
        }

        return result.ok(internal)
    }

    // Sets env by name : value
    fn set_env(name, value) {
        __internal_setenv(name, value)
    }

    // Gets cwd
    fn cwd() {
        internal := __internal_getcwd()

        if internal == null {
            return result.err(0)
        }

        return result.ok(internal)
    }

    // Gets args of cli
    fn get_args() {
        internal_list := __internal_getargs()

        real_list := new List()
        real_list.internal = internal_list

        return real_list
    }

    // Gets system summary
    fn summary() {
        return new SystemSummary()
    }

    // Gets process
    fn this() {
        return new ThisProcess()
    }

    // Gets os name
    fn os_name() {
        return __internal_get_osname()
    }
}
